name: CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  test-ssh:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v3

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
          docker-compose --version

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Python dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Generate SSH keys
        run: |
          python ssh_key_gen.py --seed foobar --comment "ubuntu@foobar.home"
          ls -l

      - name: Build containers
        run: docker-compose build

      - name: Start containers
        run: docker-compose up -d

      - name: Test ssh-keygen in client
        run: |
          set -eux
          docker-compose exec -T ssh-client ssh-keygen -y -f /tmp/id_ed25519

      - name: Test scp from client
        run: |
          set -eux
          docker-compose exec -T ssh-client \
            scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null \
                -i /tmp/id_ed25519 ubuntu@ssh-server:/etc/os-release /tmp/
          docker-compose exec -T ssh-client ls -l /tmp/os-release

      - name: Stop containers
        run: docker-compose down

      - name: Compare generated keys to reference
        run: |
          set -eux
      
          # Read the single line "foobar;ubuntu@foobar.home" from tests/seed.txt
          line=$(cat tests/seed.txt)
      
          # Parse the line, splitting at the semicolon
          IFS=';' read -r SEED COMMENT <<< "$line"
      
          echo "Using seed=$SEED comment=$COMMENT"
      
          # Remove any existing local files from previous steps
          rm -f id_ed25519 id_ed25519.pub
      
          # Generate keys using seed and comment from tests/seed.txt
          python3 ssh_key_gen.py --seed "$SEED" --comment "$COMMENT"
      
          # Compare with reference files in tests/
          diff id_ed25519.pub tests/id_ed25519.pub

          NEW_PUB="$(ssh-keygen -y -f id_ed25519)"
          REF_PUB="$(ssh-keygen -y -f tests/id_ed25519)"

          if [ "$NEW_PUB" != "$REF_PUB" ]; then
            echo "Public keys differ"
            exit 1
          fi



      
